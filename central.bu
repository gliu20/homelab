variant: fcos
version: 1.6.0

passwd:
  users:
    - name: user
      password_hash: TODO_ENTER_HASH
      ssh_authorized_keys: 
        - TODO_ENTER_SSH_KEYS
systemd:
  units:
    # Installing layered packages with rpm-ostree following best practice 
    # in docs: https://docs.fedoraproject.org/en-US/fedora-coreos/os-extensions/
    - name: rpm-ostree-install-cockpit.service
      enabled: true
      contents: |
        [Unit]
        Description=Layer Cockpit with rpm-ostree
        Wants=network-online.target
        After=network-online.target
        # We run before `zincati.service` to avoid conflicting rpm-ostree
        # transactions.
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        # `--allow-inactive` ensures that rpm-ostree does not return an error
        # if the package is already installed. This is useful if the package is
        # added to the root image in a future Fedora CoreOS release as it will
        # prevent the service from failing.
        ExecStart=/usr/bin/rpm-ostree install -y --allow-inactive \
          cockpit-system cockpit-files cockpit-networkmanager \
          cockpit-ostree cockpit-podman cockpit-selinux cockpit-storaged \
          cockpit-machines cockpit-sosreport
        ExecStart=/bin/touch /var/lib/%N.stamp
        ExecStart=/bin/systemctl --no-block reboot

        [Install]
        WantedBy=multi-user.target

    - name: enable-ssh-password-auth.service
      enabled: true
      contents: |
        [Unit]
        Description=Allow ssh password authentication
        Wants=network-online.target
        After=network-online.target
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/bin/sh -c "echo 'PasswordAuthentication yes' | sudo tee /etc/ssh/sshd_config.d/02-enable-passwords.conf"
        ExecStart=/bin/sh -c "sudo systemctl try-restart sshd"


        ExecStart=/bin/touch /var/lib/%N.stamp

        [Install]
        WantedBy=multi-user.target

    - name: enable-cockpit-ws.service
      enabled: true
      contents: |
        [Unit]
        Description=Set up cockpit web service
        Wants=network-online.target
        After=network-online.target
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/bin/sh -c "podman container runlabel --name cockpit-ws RUN quay.io/cockpit/ws"
        ExecStart=/bin/sh -c "podman container runlabel INSTALL quay.io/cockpit/ws"
        ExecStart=/bin/systemctl enable cockpit.service
        


        ExecStart=/bin/touch /var/lib/%N.stamp

        [Install]
        WantedBy=multi-user.target
