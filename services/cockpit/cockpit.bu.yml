variant: fcos
version: 1.6.0
# Cockpit via Podman Quadlet
# This runs the official cockpit/ws container using the image's RUN label semantics (privileged).
storage:
  files:
    # Ensure password auth is allowed for Cockpit login (optional if using other auth)
    - path: /etc/ssh/sshd_config.d/02-enable-passwords.conf
      mode: 0644
      contents:
        inline: |
          PasswordAuthentication yes
    # Podman Quadlet: define the Cockpit container
    - path: /etc/containers/systemd/cockpit.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Cockpit Web Console (container)
          Wants=network-online.target
          After=network-online.target

          [Container]
          Image=quay.io/cockpit/ws:latest
          # Match image RUN label intent: run privileged
          PodmanArgs=--privileged
          # Use host network
          Network=host

          # Host integration mounts
          Volume=/run/dbus/system_bus_socket:/run/dbus/system_bus_socket
          Volume=/run/systemd/journal:/run/systemd/journal
          Volume=/etc/machine-id:/etc/machine-id:ro
          Volume=/run/podman/podman.sock:/run/podman/podman.sock
          Volume=/run/udev:/run/udev:ro
          Volume=/sys/fs/cgroup:/sys/fs/cgroup:ro
          Volume=/etc/localtime:/etc/localtime:ro
          Volume=/etc/hostname:/etc/hostname:ro
          Volume=/run/NetworkManager:/run/NetworkManager:ro

          # Auto-update image from registry when available
          AutoUpdate=registry

          [Service]
          # Ensure we pull the newest image when starting
          Pull=true
          # Extend startup timeout to allow image pulls
          TimeoutStartSec=3600s
          # Keep container running and auto-restart
          Restart=always
          # Graceful stop
          TimeoutStopSec=30s

          [Install]
          WantedBy=multi-user.target
# Quadlet will synthesize cockpit.service from cockpit.container and apply [Install].
