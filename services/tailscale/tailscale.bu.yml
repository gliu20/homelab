variant: fcos
version: 1.6.0
# Tailscale via Podman Quadlet
# Runs tailscaled in a container with host networking and required privileges
# to manage the host network stack via /dev/net/tun.
#
# State directory on host: /var/lib/tailscale
# Optional env file for auth/config: /etc/tailscale/tailscale.env
#   Example contents:
#     TS_AUTHKEY=tskey-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#     TS_STATE_DIR=/var/lib/tailscale
#     TS_EXTRA_ARGS=--advertise-exit-node --accept-dns=true
#
# First boot:
# - If TS_AUTHKEY is provided, the node will auto-register.
# - Otherwise, run: sudo podman exec tailscaled tailscale up --login-server=https://controlplane (if custom)
storage:
  directories:
    # Persistent state for Tailscale
    - path: /var/lib/tailscale
      mode: 0755
    # Optional env directory (not created by default if not used)
    - path: /etc/tailscale
      mode: 0755
  files:
    # Provide a default env file so Quadlet EnvironmentFile= doesn't fail if the user hasn't created one yet.
    # Safe defaults: empty TS_EXTRA_ARGS, TS_STATE_DIR, and a commented TS_AUTHKEY line.
    - path: /etc/tailscale/tailscale.env
      mode: 0640
      contents:
        inline: |
          # Tailscale environment for the Quadlet container
          # Provide an auth key to auto-register (or leave commented and run `tailscale up` interactively):
          # TS_AUTHKEY=tskey-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
          #
          # State directory inside the container; defaults to /var/lib/tailscale
          TS_STATE_DIR=/var/lib/tailscale
          # Extra flags passed to tailscaled (optional), e.g.:
          # --advertise-exit-node --accept-dns=true --verbose=1
          TS_EXTRA_ARGS=
    # Quadlet container unit
    - path: /etc/containers/systemd/tailscale.container
      mode: 0644
      contents:
        inline: |
          [Unit]
          Description=Tailscale (container)
          Wants=network-online.target
          After=network-online.target

          [Container]
          Image=ghcr.io/tailscale/tailscale:stable
          ContainerName=tailscale
          Network=host
          AddCapability=NET_ADMIN NET_RAW
          AddDevice=/dev/net/tun

          SecurityLabelDisable=true
          LogDriver=journald

          # Persistent storage for Tailscale state
          Volume=/var/lib/tailscale:/var/lib/tailscale:Z
          # Machine identity helps with stable node identity
          Volume=/etc/machine-id:/etc/machine-id:ro
          Volume=/var/run/tailscale:/var/run/tailscale

          # Environment variables
          Environment=TS_STATE_DIR=/var/lib/tailscale
          Environment=TS_SOCKET_DIR=/var/run/tailscale
          Environment=TS_AUTHENTICATE_TO_BROWSER=true
          # Logging to journald for easier debugging
          LogDriver=journald
          # Keep the container up and auto-update when image updates are available
          AutoUpdate=registry

          [Service]
          # Make startup robust on first pull
          Pull=true
          Restart=always
          RestartSec=5
          TimeoutStartSec=300
          TimeoutStopSec=30

          # Custom startup command
          ExecStart=/usr/bin/tailscaled --state=/var/lib/tailscale/tailscaled.state --socket=/var/run/tailscale/tailscaled.sock

          # Pre-start hooks
          ExecStartPre=/bin/mkdir -p /var/lib/tailscale /var/run/tailscale
          ExecStartPre=/bin/chown -R 1000:1000 /var/lib/tailscale /var/run/tailscale

          [Install]
          WantedBy=multi-user.target
